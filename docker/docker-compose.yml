---

version: '3.3'

services:
  post_db:
    restart: always
    image: mongo:3.2
    volumes:
      - post_db:/data/db
    networks:
      - backend
  ui:
    restart: always
    environment:
      - ZIPKIN_ENABLED=${ZIPKIN_ENABLED}
    build:
      context: ../src/ui/
      dockerfile: Dockerfile.0
    image: '${USERNAME}/ui:${APP_TAG}'
    ports:
      - '${APP_PORT}:9292/tcp'
    networks:
      - frontend
    logging:
      driver: fluentd
      options:
        fluentd-address: 'localhost:24224'
        tag: service.ui
  post:
    restart: always
    environment:
      - ZIPKIN_ENABLED=${ZIPKIN_ENABLED}
    build: ../src/post-py/
    image: '${USERNAME}/post:${APP_TAG}'
    networks:
      - backend
      - frontend
    logging:
      driver: fluentd
      options:
        fluentd-address: 'localhost:24224'
        tag: service.post
  comment:
    restart: always
    environment:
      - ZIPKIN_ENABLED=${ZIPKIN_ENABLED}
    build:
      context: ../src/comment/
      dockerfile: Dockerfile.0
    image: '${USERNAME}/comment:${APP_TAG}'
    networks:
      - backend
      - frontend
  prometheus:
    restart: always
    image: '${USERNAME}/prometheus:latest'
    build: ../monitoring/prometheus/
    ports:
      - '9090:9090'
    volumes:
      - prometheus_data:/prometheus
    command:  # Передаем доп параметры в командной строке
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--storage.tsdb.retention=1d'  # Задаем время хранения метрик в 1 день
    networks:
      - backend
      - frontend
      - monitoring
  node-exporter:
    restart: always
    image: prom/node-exporter:v0.15.2
    user: root
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.ignored-mount-points="^/(sys|proc|dev|host|etc)($$|/)"'
    networks:
      - monitoring
  mongodb-exporter:
    restart: always
    image: percona/mongodb_exporter:0.30
    command:
      - '--mongodb.uri=mongodb://post_db:27017'
    networks:
      - backend
  blackbox-exporter:
    restart: always
    image: 'prom/blackbox-exporter:v0.19.0'
    networks:
      - backend
      - frontend

volumes:
  post_db: {}
  prometheus_data: {}

networks:
  frontend:
    ipam:
      config:
        - subnet: 10.0.1.0/24
  backend:
    ipam:
      config:
        - subnet: 10.0.2.0/24
  monitoring:
    ipam:
      config:
        - subnet: 10.0.3.0/24
